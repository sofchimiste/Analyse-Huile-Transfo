function analyserPhysico() {
    const seuilsParType = {
        "moins_72": { claquage: 40, dissipation: 0.10, acidite: 0.15, eau: 30, viscosite: 10, aspect: "Limpide" },
        "72_170": { claquage: 50, dissipation: 0.10, acidite: 0.10, eau: 20, viscosite: 10, aspect: "Limpide" },
        "170_400": { claquage: 60, dissipation: 0.10, acidite: 0.10, eau: 15, viscosite: 10, aspect: "Limpide" },
        "plus_400": { claquage: 60, dissipation: 0.10, acidite: 0.10, eau: 15, viscosite: 10, aspect: "Limpide" }
    };

    const typeTransfo = document.getElementById("typeTransfo").value;
    const seuils = seuilsParType[typeTransfo];

    const nom = document.getElementById("nomTransfo").value;
    const dateEch = document.getElementById("dateEchantillon").value;
    const dateAna = document.getElementById("dateAnalyse").value;

    const couleur = document.getElementById("couleur").value;
    const aspect = document.getElementById("aspect").value;
    const claquage = parseFloat(document.getElementById("claquage").value);
    const dissipation = parseFloat(document.getElementById("dissipation").value);
    const acidite = parseFloat(document.getElementById("acidite").value);
    const eau = parseFloat(document.getElementById("eau").value);
    const viscosite = parseFloat(document.getElementById("viscosite").value);

    let resultats = `<p><strong>üõ†Ô∏è Analyse du transformateur :</strong> ${nom} | Type : ${document.getElementById("typeTransfo").selectedOptions[0].text} | √âchantillon : ${dateEch} | Analyse : ${dateAna}</p>`;
    resultats += "<table class='resultats-table'><tr><th>Param√®tre</th><th>Valeur</th><th>Limite</th><th>Interpr√©tation</th></tr>";

    let nonConforme = false;

    function ligne(param, valeur, limite, interpretation) {
        resultats += `<tr><td>${param}</td><td>${valeur}</td><td>${limite}</td><td>${interpretation}</td></tr>`;
    }

    ligne("Couleur", couleur, "-", "Observation visuelle");
    if (aspect !== seuils.aspect) { ligne("Aspect", aspect, seuils.aspect, "‚ö†Ô∏è Non conforme (huile trouble)"); nonConforme = true; } else { ligne("Aspect", aspect, seuils.aspect, "‚úÖ Conforme"); }
    if (claquage < seuils.claquage) { ligne("Tension de Claquage", claquage, seuils.claquage, "‚õî Faible ‚Üí filtration ou remplacement conseill√©"); nonConforme = true; } else { ligne("Tension de Claquage", claquage, seuils.claquage, "‚úÖ Conforme"); }
    if (dissipation > seuils.dissipation) { ligne("Facteur de Dissipation", dissipation, seuils.dissipation, "‚õî √âlev√© ‚Üí v√©rifier isolation"); nonConforme = true; } else { ligne("Facteur de Dissipation", dissipation, seuils.dissipation, "‚úÖ Conforme"); }
    if (acidite > seuils.acidite) { ligne("Indice d‚ÄôAcidit√©", acidite, seuils.acidite, "‚õî √âlev√© ‚Üí r√©g√©n√©ration n√©cessaire"); nonConforme = true; } else { ligne("Indice d‚ÄôAcidit√©", acidite, seuils.acidite, "‚úÖ Conforme"); }
    if (eau > seuils.eau) { ligne("Teneur en Eau", eau, seuils.eau, "‚õî √âlev√©e ‚Üí s√©chage requis"); nonConforme = true; } else { ligne("Teneur en Eau", eau, seuils.eau, "‚úÖ Conforme"); }
    if (viscosite > seuils.viscosite) { ligne("Viscosit√© √† 40¬∞C", viscosite, seuils.viscosite, "‚õî √âlev√©e ‚Üí fluide √† contr√¥ler"); nonConforme = true; } else { ligne("Viscosit√© √† 40¬∞C", viscosite, seuils.viscosite, "‚úÖ Conforme"); }

    resultats += "</table>";
    document.getElementById("resultatsPhysico").innerHTML = resultats;
    document.getElementById("analyseResultats").style.display = "block";

    const conclusion = nonConforme
        ? `<p style='color:red; font-weight:bold;'>‚ö†Ô∏è L'huile pr√©sente des non-conformit√©s pour un transformateur de type : <u>${document.getElementById("typeTransfo").selectedOptions[0].text}</u>. Des actions sont n√©cessaires (filtration, s√©chage, remplacement...)</p>`
        : `<p style='color:green; font-weight:bold;'>‚úÖ L'huile est conforme aux sp√©cifications recommand√©es pour le type de transformateur s√©lectionn√©.</p>`;

    document.getElementById("conclusionPhysico").innerHTML = conclusion;
}

function exportPDF(divId, filename) {
    const element = document.getElementById(divId);
    if (!element || element.innerText.trim() === '' || getComputedStyle(element).display === 'none') {
        alert("‚ö†Ô∏è Aucun r√©sultat √† exporter. Veuillez effectuer l‚Äôanalyse d'abord.");
        return;
    }

    element.style.display = 'block';

    const opt = {
        margin: 10,
        filename: filename,
        image: { type: 'jpeg', quality: 1 },
        html2canvas: { scale: 2, useCORS: true },
        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
    };

    setTimeout(() => {
        html2pdf().set(opt).from(element).save();
    }, 300);
}

function exportTXT(divId, filename) {
    const text = document.getElementById(divId).innerText;
    const blob = new Blob([text], { type: 'text/plain' });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = filename;
    link.click();
}
