function analyserGaz() {
    const requiredIds = [
        "nomTransfo", "typeTransfo", "dateEchantillon", "dateAnalyse",
        "h2", "co", "ch4", "c2h6", "c2h4", "c2h2"
    ];

    for (let id of requiredIds) {
        const el = document.getElementById(id);
        if (!el || !el.value) {
            alert("‚ö†Ô∏è Veuillez remplir tous les champs avant d'analyser.");
            return;
        }
    }

    const seuilsParType = {
        "moins_72": { h2: 100, co: 350, ch4: 120, c2h6: 65, c2h4: 50, c2h2: 35 },
        "72_170": { h2: 100, co: 350, ch4: 120, c2h6: 65, c2h4: 50, c2h2: 35 },
        "170_400": { h2: 100, co: 350, ch4: 120, c2h6: 65, c2h4: 50, c2h2: 35 },
        "plus_400": { h2: 100, co: 350, ch4: 120, c2h6: 65, c2h4: 50, c2h2: 35 }
    };

    const typeTransfo = document.getElementById("typeTransfo").value;
    const seuils = seuilsParType[typeTransfo];

    const nom = document.getElementById("nomTransfo").value;
    const dateEch = document.getElementById("dateEchantillon").value;
    const dateAna = document.getElementById("dateAnalyse").value;

    const h2 = parseFloat(document.getElementById("h2").value);
    const co = parseFloat(document.getElementById("co").value);
    const ch4 = parseFloat(document.getElementById("ch4").value);
    const c2h6 = parseFloat(document.getElementById("c2h6").value);
    const c2h4 = parseFloat(document.getElementById("c2h4").value);
    const c2h2 = parseFloat(document.getElementById("c2h2").value);

    let resultats = `<p><strong>üõ†Ô∏è Analyse du transformateur :</strong> ${nom} | Type : ${document.getElementById("typeTransfo").selectedOptions[0].text} | √âchantillon : ${dateEch} | Analyse : ${dateAna}</p>`;
    resultats += "<table class='resultats-table'><tr><th>Gaz</th><th>Valeur</th><th>Limite</th><th>Interpr√©tation</th></tr>";

    let nonConforme = false;

    function ligne(gaz, valeur, limite, interpretation) {
        resultats += `<tr><td>${gaz}</td><td>${valeur}</td><td>${limite}</td><td>${interpretation}</td></tr>`;
    }

    if (h2 > seuils.h2) { ligne("Hydrog√®ne (H‚ÇÇ)", h2, seuils.h2, "‚õî D√©charge partielle"); nonConforme = true; } else { ligne("Hydrog√®ne (H‚ÇÇ)", h2, seuils.h2, "‚úÖ Conforme"); }
    if (co > seuils.co) { ligne("Monoxyde de Carbone (CO)", co, seuils.co, "‚õî D√©composition papier isolant"); nonConforme = true; } else { ligne("Monoxyde de Carbone (CO)", co, seuils.co, "‚úÖ Conforme"); }
    if (ch4 > seuils.ch4) { ligne("M√©thane (CH‚ÇÑ)", ch4, seuils.ch4, "‚õî D√©charges partielles"); nonConforme = true; } else { ligne("M√©thane (CH‚ÇÑ)", ch4, seuils.ch4, "‚úÖ Conforme"); }
    if (c2h6 > seuils.c2h6) { ligne("√âthane (C‚ÇÇH‚ÇÜ)", c2h6, seuils.c2h6, "‚õî D√©faut thermique faible √©nergie"); nonConforme = true; } else { ligne("√âthane (C‚ÇÇH‚ÇÜ)", c2h6, seuils.c2h6, "‚úÖ Conforme"); }
    if (c2h4 > seuils.c2h4) { ligne("√âthyl√®ne (C‚ÇÇH‚ÇÑ)", c2h4, seuils.c2h4, "‚õî Surchauffe locale"); nonConforme = true; } else { ligne("√âthyl√®ne (C‚ÇÇH‚ÇÑ)", c2h4, seuils.c2h4, "‚úÖ Conforme"); }
    if (c2h2 > seuils.c2h2) { ligne("Ac√©tyl√®ne (C‚ÇÇH‚ÇÇ)", c2h2, seuils.c2h2, "‚õî Arc √©lectrique (d√©faut grave)"); nonConforme = true; } else { ligne("Ac√©tyl√®ne (C‚ÇÇH‚ÇÇ)", c2h2, seuils.c2h2, "‚úÖ Conforme"); }

    resultats += "</table>";
    document.getElementById("resultatsGaz").innerHTML = resultats;
    document.getElementById("analyseResultatsGaz").style.display = "block";

    const conclusion = nonConforme
        ? `<p style='color:red; font-weight:bold;'>‚ö†Ô∏è Des concentrations de gaz anormales ont √©t√© d√©tect√©es pour un transformateur de type : <u>${document.getElementById("typeTransfo").selectedOptions[0].text}</u>. Analyse approfondie et actions correctives recommand√©es.</p>`
        : `<p style='color:green; font-weight:bold;'>‚úÖ Les concentrations en gaz sont conformes pour le type de transformateur s√©lectionn√©. Aucun d√©faut significatif d√©tect√©.</p>`;

    document.getElementById("conclusionGaz").innerHTML = conclusion;
}

function exportPDF(divId, filename) {
    const element = document.getElementById(divId);
    if (!element || element.innerHTML.trim() === '' || element.style.display === 'none') {
        alert("‚ö†Ô∏è Aucun r√©sultat √† exporter. Veuillez effectuer l‚Äôanalyse d'abord.");
        return;
    }
    element.style.display = 'block';
    const opt = {
        margin: 10,
        filename: filename,
        image: { type: 'jpeg', quality: 1 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
    };
    html2pdf().set(opt).from(element).save();
}

function exportTXT(divId, filename) {
    const text = document.getElementById(divId).innerText;
    const blob = new Blob([text], { type: 'text/plain' });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = filename;
    link.click();
}
